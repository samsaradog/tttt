This project implements the classic Tic-Tac-Toe game using a simple, command
line interface. Compiling and running it should be possible on any standard
Un*x implementation that has a g++ compiler and STL available.

You do need to have cppunit installed, and LD_LIBRARY_PATH set to point
to where its so file lives.

=====================================

TTTT Game Design

This implementation uses a min/max tree with alpha-beta pruning
to determine the computer move. Unlike the earlier rule-based
implementation, this one should be expandable into larger game
grids.

Many of the components of the rule-based game should be reusable,
such as the Game class to hold the current state of the game,
and the FindWinner object to determine whether the game is in a
winning configuration and whether a winning move is possible.

I may change the numbering scheme initially, but for now it works.

The first thing that will change is making several classes into
singletons, using John Vlissides classic guidance.

Next problem is how to make copies of the Game objects, or at least the
state of the Game objects, as the nodes of the tree get created. In
the last implementation, Game just held the two players (Human and
Computer) to make sure that the state of all three got updated at
the same time when one of the players made a move. There was only one
Game, but it was given pointers to the players that were part of it.
Maybe the way to do it is to have the Game incorporate two player
objects, then make pointers to them available. That way, a copy of
the Game can just make copies of the players. No mementos necessary.
